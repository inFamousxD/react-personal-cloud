{"version":3,"sources":["components/navbar/Navigation.js","components/home/Dash.js","components/notes/Notes.js","App.js","index.js"],"names":["root","flexGrow","position","top","zIndex","toolbarExpanded","height","alignItems","background","color","transition","toolbar","title","alignSelf","fontFamily","fontWeight","fontSize","marginBottom","userSelect","cursor","Navigation","expandNavbar","expandNavbarHandler","setSelected","style","AppBar","Toolbar","Typography","onClick","variant","noWrap","CloudCircle","IconButton","marginTop","edge","dashButtons","margin","Dash","selected","handleIndex","index","React","useState","width","backgroundColor","display","dash","useEffect","buttonTextStyle","Card","CardContent","DescriptionOutlined","LinkOutlined","OutlinedFlag","BookOutlined","Transition","forwardRef","props","ref","Slide","direction","useStyles","makeStyles","theme","borderRadius","paper","text","dropDownstyle","border","createMuiTheme","overrides","MuiInputLabel","Notes","projectFirestore","folders","setFolders","openFolder","setOpenFolder","loading","setLoading","open","setOpen","openForm","setOpenForm","folderName","notes","note","date","Date","now","important","progress","notesData","setNotesData","isPhone","useMediaQuery","query","classes","folderCollapseState","setFolderCollapseState","collapseFolders","currentNote","setCurrentNote","handleOpenNote","handleCloseNote","handleOpenForm","handleCloseForm","containerStyle","dark","padding","mobileDark","progressStyle","gridListStyle","transform","folderStyle","parentRowStyle","mobile","desktop","gridListCardStyle","undefined","folder","newNote","setNewNote","createFolderDialog","setCreateFolderDialog","newFolder","setNewFolder","handleCloseNewFolder","fetchAll","collection","get","then","snapshot","docs","forEach","id","temp","data","push","Row","Col","xs","sm","md","lg","xl","Container","fluid","AddCircleOutlineRounded","ArrowUpwardRounded","ArrowDownwardRounded","map","handleFolderChange","ArrowRightAlt","className","flexWrap","justifyContent","Button","float","autoHide","autoHideTimeout","renderThumbVertical","opacity","GridList","cellHeight","spacing","GridListTile","cols","rows","borderTop","StarRounded","DoneAllRounded","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Dialog","TransitionComponent","keepMounted","fullWidth","maxWidth","scroll","onClose","DialogContent","DialogActions","doc","delete","newNoteData","filter","xnote","catch","error","console","disableBackdropClick","ThemeProvider","TextField","autoComplete","autoFocus","type","label","value","onChange","event","target","InputProps","form","autocomplete","multiline","Select","labelId","MenuProps","MenuItem","FormControlLabel","control","Checkbox","checked","e","name","add","update","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","App","setExpandNavbar","ReactDOM","render","document","getElementById"],"mappings":"yRAUMA,EAAO,CACZC,SAAU,EACVC,SAAU,SACVC,IAAK,EACLC,OAAQ,GAGHC,EAAkB,CACvBC,OAAQ,IACRC,WAAY,aACZC,WAAY,2LACZC,MAAO,OACPC,WAAY,aAGPC,EAAU,CACfL,OAAQ,GACRC,WAAY,aACZC,WAAY,2LACZC,MAAO,OACPC,WAAY,aAIPE,EAAQ,CACbX,SAAU,EACVY,UAAW,WACXC,WAAY,UACZC,WAAY,MACZC,SAAU,SACVC,aAAc,QACdC,WAAY,OACZC,OAAQ,WAyBMC,EAtBI,SAAC,GAAsD,IAArDC,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,oBAAqBC,EAAiB,EAAjBA,YAMvD,OACC,qBAAKC,MAAOxB,EAAZ,SACC,cAACyB,EAAA,EAAD,CAAQvB,SAAS,SAAjB,SACC,eAACwB,EAAA,EAAD,CAASF,MAAOH,EAAehB,EAAkBM,EAAjD,UACC,eAACgB,EAAA,EAAD,CAAYC,QATS,WACxBN,GAAoB,GACpBC,GAAa,IAO6BC,MAAOZ,EAAOiB,QAAQ,KAAKC,QAAM,EAAxE,UACC,cAACC,EAAA,EAAD,IADD,qBAGA,cAACC,EAAA,EAAD,CAAYR,MAAO,CAACS,UAAW,SAAU,aAAW,uBAAuBC,KAAK,MAAMzB,MAAM,UAA5F,SACC,cAAC,IAAD,c,sDCrDA0B,EAAc,CACnB1B,MAAO,QACP2B,OAAQ,WAuCMC,EApCF,SAAC,GAAoD,IAAlDf,EAAiD,EAAjDA,oBAAqBgB,EAA4B,EAA5BA,SAAUf,EAAkB,EAAlBA,YACxCgB,EAAc,SAACC,GACpBjB,EAAYiB,IAGb,EAAeC,IAAMC,SAAS,CAC7BC,MAAO,OACPP,OAAQ,OACRQ,gBAAiB,OACjB9B,WAAY,UACZ+B,QAAS,UALHC,EAAP,oBAQAL,IAAMM,WAAU,YACG,IAAdT,GACHhB,GAAoB,KAEnB,CAACgB,EAAUhB,EAAqBwB,IAEnC,IAAME,EAAkB,CAAEjC,WAAY,MAAOC,SAAU,OAAQP,MAAO,QAEtE,OACC,8BACA,cAACwC,EAAA,EAAD,CAAMzB,MAAOsB,EAAMjB,QAAQ,WAA3B,SACC,eAACqB,EAAA,EAAD,WACC,eAAClB,EAAA,EAAD,CAAYJ,QAAS,WAAOW,EAAY,IAAxC,UAA6C,cAACY,EAAA,EAAD,CAAqB3B,MAAOW,IAAc,sBAAMX,MAAOwB,EAAb,SAA+B,cACtH,eAAChB,EAAA,EAAD,CAAYJ,QAAS,WAAOW,EAAY,IAAxC,UAA6C,cAACa,EAAA,EAAD,CAAc5B,MAAOW,IAAc,sBAAMX,MAAOwB,EAAb,SAA+B,cAC/G,eAAChB,EAAA,EAAD,CAAYJ,QAAS,WAAOW,EAAY,IAAxC,UAA6C,cAACc,EAAA,EAAD,CAAc7B,MAAOW,IAAc,sBAAMX,MAAOwB,EAAb,SAA+B,cAC/G,eAAChB,EAAA,EAAD,CAAYJ,QAAS,WAAOW,EAAY,IAAxC,UAA6C,cAACe,EAAA,EAAD,CAAc9B,MAAOW,IAAc,sBAAMX,MAAOwB,EAAb,SAA+B,sB,4RCxB7GO,GAAad,IAAMe,YAAW,SAAoBC,EAAOC,GAC3D,OAAO,cAACC,GAAA,EAAD,aAAOC,UAAU,KAAKF,IAAKA,GAASD,OAGzCI,GAAYC,cAAW,SAACC,GAAD,MAAY,CACrC/D,KAAM,CACF4C,gBAAiB,UACjBnC,MAAO,OACPuD,aAAc,OACdjD,WAAY,MACZC,SAAU,SAEdiD,MAAO,CACHrB,gBAAiB,QAErBhC,MAAO,CACHG,WAAY,MACZC,SAAU,QACVP,MAAO,QAEXyD,KAAM,CACFzD,MAAO,QAEX0D,cAAe,CACbC,OAAQ,kBACRJ,aAAc,KACdpB,gBAAiB,OACjBnC,MAAO,YAIPsD,GAAQM,YAAe,CACzBC,UAAW,CACPC,cAAe,CACXvE,KAAM,CACFS,MAAO,YAyfR+D,GAnfD,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBACb,EAA8BhC,IAAMC,SAAS,IAA7C,mBAAOgC,EAAP,KAAgBC,EAAhB,KACA,EAAoClC,IAAMC,SAAS,GAAnD,mBAAOkC,EAAP,KAAmBC,EAAnB,KACA,EAA8BpC,IAAMC,UAAS,GAA7C,mBAAOoC,EAAP,KAAgBC,EAAhB,KACA,EAAwBtC,IAAMC,UAAS,GAAvC,mBAAOsC,EAAP,KAAaC,EAAb,KACA,EAAgCxC,IAAMC,UAAS,GAA/C,mBAAOwC,EAAP,KAAiBC,EAAjB,KAEA,EAAkC1C,IAAMC,SAAS,CAAC,CAC9C0C,WAAY,UACZC,MAAO,CACH,CACIC,KAAM,UACNC,KAAMC,KAAKC,MACX7E,MAAO,UACP8E,WAAW,EACXC,SAAU,OARtB,mBAAOC,EAAP,KAAkBC,GAAlB,KAaMC,GAAUC,wBAAc,CAAEC,MAAO,wBAEjCC,GAAUpC,KAEhB,GAAsDpB,IAAMC,UAAS,GAArE,qBAAOwD,GAAP,MAA4BC,GAA5B,MACMC,GAAkB,WACpBD,IAAwBD,KAG5B,GAAsCzD,IAAMC,SAAS,IAArD,qBAAO2D,GAAP,MAAoBC,GAApB,MACMC,GAAiB,SAACjB,GACpBgB,GAAehB,GACfL,GAAQ,IAGNuB,GAAkB,WACpBF,GAAe,IACfrB,GAAQ,IAGNwB,GAAiB,WACnBtB,GAAY,IAGVuB,GAAkB,WACpBvB,GAAY,IAGVwB,GAAiB,CACnBC,KAAM,CACFjE,MAAO,OACPlC,MAAO,OACPmC,gBAAiB,OACjBiE,QAAS,WAEbC,WAAY,CACRnE,MAAO,OACPlC,MAAO,OACPmC,gBAAiB,OACjBiE,QAAS,IACTzE,OAAQ,YACRpB,SAAU,UAIZ+F,GAAgB,CAClB,CAAEtG,MAAO,OACT,CAAEA,MAAO,UACT,CAAEA,MAAO,UAGPuG,GAAgB,CAClBrE,MAAO,OACPsE,UAAW,gBACXnG,WAAY,YACZsB,OAAQ,UACRrB,WAAY,OAKVmG,GAAc,CAChBzG,MAAO,QACPS,WAAY,OACZC,OAAQ,UACRH,SAAU,MACV6F,QAAS,UACTnG,WAAY,eAGVyG,GAAiB,CACnBC,OAAQ,CACJzE,MAAO,OACPP,OAAQ,QAEZiF,QAAS,CACL1E,MAAO,MACPP,OAAQ,SAIVkF,GAAoB,CAAE1E,gBAAiB,UAAWtC,OAAQ,OAAQa,OAAQ,UAAWD,WAAY,QAEvG,GAA8BuB,IAAMC,SAAS,CACzC9B,MAAO,GACP0E,KAAM,GACNC,UAAMgC,EACN7B,WAAW,EACXC,SAAU,EACV6B,YAAQD,IANZ,qBAAOE,GAAP,MAAgBC,GAAhB,MAwEA,GAAoDjF,IAAMC,UAAS,GAAnE,qBAAOiF,GAAP,MAA2BC,GAA3B,MACA,GAAkCnF,IAAMC,SAAS,IAAjD,qBAAOmF,GAAP,MAAkBC,GAAlB,MAMMC,GAAuB,WACzBH,IAAsB,IAuC1B,OArBAnF,IAAMM,WAAU,WACZ,IAAIiF,EAAW,GACflD,GAAWL,EAAiBwD,WAAW,SAASC,MAAMC,MAAK,SAACC,GACxDA,EAASC,KAAKC,SAAQ,SAAChD,GACnB,GAAgB,aAAZA,EAAKiD,GAAmB,CACxB,IAAIC,EAAOlD,EAAKmD,OAChBD,EAAI,GAASlD,EAAKiD,GAClBP,EAASU,KAAKF,QAEd7D,EAAWW,EAAKmD,OAAO/D,eAGhCyD,MAAK,WACJtC,GAAamC,MACdG,MAAK,YACHrC,IAAWK,IAAuB,GACnCpB,GAAW,QAGhB,CAACe,GAASrB,EAAkBK,KAG1BA,GAAW,gCAAK,eAAC6D,EAAA,EAAD,CAAKnH,MAAOsE,GAAUqB,GAAeC,OAASD,GAAeE,QAA7D,UACb,cAACuB,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvC,SACI,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAC3H,MAAK,2BAAMmF,GAAeC,MAArB,IAA2BjE,MAAO,SAAxD,UACI,eAACgG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzC,SACI,oBAAIzH,MAAO0E,GAAsB,CAACjF,aAAc,OAAS,CAACA,aAAc,OAAxE,yBAEJ,eAAC2H,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGzH,MAAO,CAC3CS,UAAW,SACXf,WAAY,OACZC,OAAQ,WAHZ,WAKM+E,IAAuB,cAACkD,EAAA,EAAD,CAAyBxH,QAjD9C,WACxBgG,IAAsB,MAiDD9B,KAAYI,IAAuB,cAACmD,EAAA,EAAD,CAAoBzH,QAAS,WAAOwE,QACvEN,IAAWI,IAAuB,cAACoD,EAAA,EAAD,CAAsB1H,QAAS,WAAOwE,cAI7E1B,EAAQ6E,KAAI,SAAC/B,EAAQhF,GACjB,OACI,eAACmG,EAAA,EAAD,CAAiB/G,QAAS,YApK3B,SAACY,GAAYqC,EAAcrC,GAoKOgH,CAAmBhH,IAAShB,MAAO0E,GAAsB,CAACrD,QAAS,QAAU,GAA9G,UACI,cAAC+F,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzC,SACA,qBAAKzH,MACDgB,IAAUoC,EAAV,2BACOsC,IADP,IACoBzG,MAAO,YACvByG,GAHR,SAIGM,MAEH,cAACoB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACI,cAACQ,EAAA,EAAD,CAAejI,MACXgB,IAAUoC,EAAa,CACnBnE,MAAO,UACPwB,UAAW,QACXf,WAAY,OACZC,OAAQ,WACR,CACAV,MAAO,QACPwB,UAAW,QACXf,WAAY,OACZC,OAAQ,iBAnBdqB,YA8B3BsD,IAAW,cAAC8C,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGS,UAAU,eAApD,SACV,qBAAKlI,MAAO,CACRmI,SAAU,OACVC,eAAgB,eAChB9I,WAAY,aAHhB,SAKI,eAACoI,EAAA,EAAD,CAAWC,OAAK,EAAC3H,MAAOmF,GAAeC,KAAvC,UACI,eAAC+B,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAK,iDAAmB,sBAAMpH,MAAO,CAACf,MAAO,WAArB,SAAkCiE,EAAQE,UAClE,cAACgE,EAAA,EAAD,UAAK,cAACiB,EAAA,EAAD,CAAQrI,MAAO,CAChBf,MAAO,QAASmC,gBAAiB,OAAQkH,MAAO,SACjDlI,QAAS6E,GAFP,2BAIT,cAAC,aAAD,CAAYsD,UAAQ,EAACC,gBAAiB,IAAMxI,MAAO,CAAClB,OAAQ,QAAQ2J,oBAAqB,gBAAGzI,EAAH,EAAGA,MAAUiC,EAAb,yBACrF,+CAASA,GAAT,IAAgBjC,MAAK,2BAAOA,GAAP,IAAcoB,gBAAiB,UAAWD,MAAO,MAAOuH,QAAS,YAD1F,SAGA,cAACC,EAAA,EAAD,CAAUC,WAAY,IAAKC,QAAS,EAAG7I,MAAOwF,GAA9C,SAEQpB,EAAU2D,KAAI,SAACjE,EAAM9C,GAAP,OACV8C,EAAKkC,SAAW9C,EAAQE,IAAe,cAAC0F,EAAA,EAAD,CAA0BC,KAAM,EAAGC,KAAM,EAAzC,SACnC,cAACvH,EAAA,EAAD,CAAMrB,QAAS,WAAO2E,GAAejB,IAAQ9D,MAAO8D,EAAKI,UAAL,2BAAqB4B,IAArB,IAAwCmD,UAAW,mBAAoBnD,GAA3H,SACI,eAACpE,EAAA,EAAD,WACI,eAACyF,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKE,GAAI,GAAID,GAAI,GAAIE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzC,UACI,sBAAMzH,MAAO,CAACf,MAAO,OAAQM,WAAY,MAAOC,SAAU,SAA1D,SAAqEsE,EAAK1E,QAAa,0BAE3F,eAACgI,EAAA,EAAD,CAAKE,GAAI,GAAID,GAAI,GAAIE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzC,UACM3D,EAAKI,WAAa,cAACgF,EAAA,EAAD,CAAalJ,MAAO,CAACf,MAAO,UAC9C,cAACkK,EAAA,EAAD,CAAgBnJ,MAAQuF,GAAczB,EAAKK,kBAGrD,sBAAMnE,MAAO,CAACf,MAAO,OAAQM,WAAY,MAAOC,SAAU,OAA1D,SAAmE,IAAI4J,KAAKC,eAAe,QAAS,CAACC,KAAM,UAAWC,MAAO,UAAUC,IAAK,UAAWC,KAAM,UAAWC,OAAQ,UAAWC,OAAQ,YAAYC,OAAO9F,EAAKC,cAZ7K/C,iBA6BhFsD,IAAW,cAAC8C,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGS,UAAU,eAApD,SACT,qBAAKlI,MAAO,CACRmI,SAAU,OACVC,eAAgB,gBAFpB,SAII,eAACV,EAAA,EAAD,CAAWC,OAAK,EAAC3H,MAAOmF,GAAeG,WAAvC,UACI,eAAC6B,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKE,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SAAwC,iDAAmB,sBAAMzH,MAAO,CAACf,MAAO,WAArB,SAAkCiE,EAAQE,UACrG,cAACgE,EAAA,EAAD,CAAKE,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SAAwC,cAACY,EAAA,EAAD,CAAQrI,MAAO,CACnDf,MAAO,QAASmC,gBAAiB,OAAQkH,MAAO,SACjDlI,QAAS6E,GAF4B,2BAI5C,cAAC,aAAD,CAAYsD,UAAQ,EAACC,gBAAiB,IAAMxI,MAAO,CAAClB,OAAQ,QAAQ2J,oBAAqB,gBAAGzI,EAAH,EAAGA,MAAUiC,EAAb,yBACrF,+CAASA,GAAT,IAAgBjC,MAAK,2BAAOA,GAAP,IAAcoB,gBAAiB,UAAWD,MAAO,MAAOuH,QAAS,YAD1F,SAGA,cAACC,EAAA,EAAD,CAAUC,WAAY,IAAKC,QAAS,EAAG7I,MAAOwF,GAA9C,SAEQpB,EAAU2D,KAAI,SAACjE,EAAM9C,GAAP,OACV8C,EAAKkC,SAAW9C,EAAQE,IAAe,cAAC0F,EAAA,EAAD,CAA0BC,KAAM,EAAGC,KAAM,EAAzC,SACnC,cAACvH,EAAA,EAAD,CAAMrB,QAAS,WAAO2E,GAAejB,IAAQ9D,MAAO8D,EAAKI,UAAL,2BAAqB4B,IAArB,IAAwCmD,UAAW,iBAAkBnK,OAAQ,SAAUgH,GAA3I,SACI,eAACpE,EAAA,EAAD,WACI,eAACyF,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKE,GAAI,GAAID,GAAI,GAAIE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzC,UACI,sBAAMzH,MAAO,CAACf,MAAO,OAAQM,WAAY,MAAOC,SAAU,SAA1D,SAAqEsE,EAAK1E,QAAa,0BAE3F,eAACgI,EAAA,EAAD,CAAKE,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,UACM3D,EAAKI,UAAY,cAACgF,EAAA,EAAD,CAAalJ,MAAO,CAACf,MAAO,YAA7C,GACA,cAACkK,EAAA,EAAD,CAAgBnJ,MAAK,2BAAOuF,GAAczB,EAAKK,WAA1B,IAAqCmE,MAAO,iBAG3E,sBAAMtI,MAAO,CAACf,MAAO,OAAQM,WAAY,MAAOC,SAAU,OAA1D,SAAmE,IAAI4J,KAAKC,eAAe,QAAS,CAACC,KAAM,UAAWC,MAAO,UAAUC,IAAK,UAAWC,KAAM,UAAWC,OAAQ,UAAWC,OAAQ,YAAYC,OAAO9F,EAAKC,cAZ7K/C,oBA2BtF,eAAC6I,EAAA,EAAD,CACIrG,KAAMA,EACNsG,oBAAqB/H,GACrBgI,aAAW,EACXC,WAAW,EACXC,SAAU,KACVC,OAAQ,QACRC,QAASnF,GACT,kBAAgB,2BAChB,mBAAiB,iCAEjBP,QAAS,CACLhC,MAAOgC,GAAQhC,OAZvB,UAeI,cAAC2H,EAAA,EAAD,CAAelC,UAAWzD,GAAQrF,MAAO2H,GAAG,2BAA5C,SAAwElC,GAAYzF,QACpF,cAACgL,EAAA,EAAD,CAAelC,UAAWzD,GAAQjG,KAAlC,SAAwC,sBAAMwB,MAAO,CAACf,MAAO,OAAQM,WAAY,MAAOC,SAAU,OAA1D,SAAmE,IAAI4J,KAAKC,eAAe,QAAS,CAACC,KAAM,UAAWC,MAAO,UAAUC,IAAK,UAAWC,KAAM,UAAWC,OAAQ,UAAWC,OAAQ,YAAYC,OAAO/E,GAAYd,UAC1Q,cAACqG,EAAA,EAAD,CAAelC,UAAWzD,GAAQjG,KAAlC,SAAyCqG,GAAYf,OACrD,eAACuG,EAAA,EAAD,CAAenC,UAAWzD,GAAQjG,KAAlC,UACA,cAAC6J,EAAA,EAAD,CAAQpJ,MAAM,YAAYe,MAAQ6E,GAAYX,UAAY,CAAEjF,MAAO,QAAW,GAA9E,uBAGA,cAACoJ,EAAA,EAAD,CAAQjI,QAAS,WAjOA,IAAC0D,IAiOuBe,GAhO7C5B,EAAiBwD,WAAW,SAAS6D,IAAIxG,EAAKiD,IAAIwD,SAAS5D,MAAK,WAC5D,IAAI6D,EAAcpG,EAAUqG,QAAO,SAAAC,GAC/B,OAAO5G,EAAKiD,KAAO2D,EAAM3D,MAE7B1C,GAAamG,MACdG,OAAM,SAACC,GACNC,QAAQD,MAAM,4BAA6BA,MAE/C5F,MAwN4D/F,MAAM,YAA9D,oBAGA,cAACoJ,EAAA,EAAD,CAAQjI,QAAS4E,GAAiB/F,MAAM,YAAxC,yBAMJ,eAAC4K,EAAA,EAAD,CACIrG,KAAME,EACNoG,oBAAqB/H,GACrBgI,aAAW,EACXC,WAAW,EACXC,SAAU,KACVC,OAAQ,QACRC,QAASjF,GACT,kBAAgB,2BAChB,mBAAiB,iCACjB4F,sBAAsB,EAEtBrG,QAAS,CACLhC,MAAOgC,GAAQhC,OAbvB,UAgBI,cAAC2H,EAAA,EAAD,CAAelC,UAAWzD,GAAQrF,MAAO2H,GAAG,2BAA5C,SAAwE,aAGxE,cAACgE,EAAA,EAAD,CAAexI,MAAOA,GAAtB,SACA,eAAC6H,EAAA,EAAD,CAAelC,UAAWzD,GAAQjG,KAAlC,UACI,cAACwM,GAAA,EAAD,CAAW/L,MAAM,YAAYgM,aAAa,MAAMjB,WAAS,EAACkB,WAAS,EAACtK,OAAO,QAAQmG,GAAG,QAAQoE,KAAK,OAAOC,MAAM,QAAQC,MAAOpF,GAAQ7G,MAAOkM,SAlThI,SAACC,GACvBrF,IAAW,SAAAD,GAAO,kCACXA,GADW,IAEd7G,MAAOmM,EAAMC,OAAOH,YA+S2JI,WAAY,CAAEzL,MAAO,CAAEf,MAAO,QAASO,SAAU,SAAUF,WAAY,WAAaoM,KAAM,CAACC,aAAc,UACpR,cAACX,GAAA,EAAD,CAAW/L,MAAM,YAAY+K,WAAS,EAAC4B,WAAW,EAAMhL,OAAO,QAAQmG,GAAG,QAAQoE,KAAK,OAAOC,MAAM,OAAOC,MAAOpF,GAAQnC,KAAMwH,SA5SnH,SAACC,GACtBrF,IAAW,SAAAD,GAAO,kCACXA,GADW,IAEdnC,KAAMyH,EAAMC,OAAOH,YAyS6II,WAAY,CAAEzL,MAAO,CAAEf,MAAO,QAASO,SAAU,SAAUF,WAAY,cAEnO,eAAC6H,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACA,eAACyE,EAAA,EAAD,CAAQ7L,MAAO,CAAES,UAAW,QAASxB,MAAO,QACxC6M,QAAQ,2BACR/E,GAAG,qBACHsE,MAAOpF,GAAQ9B,SACfmH,SAtSS,SAACC,GAC1BrF,IAAW,SAAAD,GAAO,kCACXA,GADW,IAEd9B,SAAUoH,EAAMC,OAAOH,YAoSXpM,MAAM,YACN8M,UAAW,CACPtH,QAAS,CACLhC,MAAOgC,GAAQ9B,gBAR3B,UAYI,cAACqJ,EAAA,EAAD,CAAUX,MAAO,EAAjB,wBACA,cAACW,EAAA,EAAD,CAAUX,MAAO,EAAjB,qBACA,cAACW,EAAA,EAAD,CAAUX,MAAO,EAAjB,2BAGJ,cAACjE,EAAA,EAAD,UACI,cAAC6E,EAAA,EAAD,CAAkBjM,MAAO,CAAES,UAAW,QAASf,WAAY,QACvDwM,QAAS,cAACC,EAAA,EAAD,CAAUC,QAASnG,GAAQ/B,UAAWoH,SAAU,WA5TnD,IAACe,KA4TgFpG,GAAQ/B,UA3TnHgC,IAAW,SAAAD,GAAO,kCACXA,GADW,IAEd/B,UAAWmI,QAyTiHC,KAAK,kBACjHlB,MAAM,wBAQtB,eAACf,EAAA,EAAD,CAAenC,UAAWzD,GAAQjG,KAAlC,UACA,cAAC6J,EAAA,EAAD,CAAQjI,QAAS8E,GAAiBjG,MAAM,YAAxC,oBAGA,cAACoJ,EAAA,EAAD,CAAQjI,QA3TY,WACxB,IAAI4G,EAAOf,GACXe,EAAI,2BACGA,GADH,IAEAhB,OAAQ9C,EAAQE,GAChBW,KAAMC,KAAKC,QAEHG,EACN8C,KAAKF,GAEX/D,EAAiBwD,WAAW,SAAS8F,IAAIvF,GACzC9B,KAEAgB,GAAW,CACP9G,MAAO,GACP0E,KAAM,GACNC,UAAMgC,EACN7B,WAAW,EACXC,SAAU,EACV6B,YAAQD,KAwS8B9G,MAAM,YAA5C,uBAMJ,eAAC4K,EAAA,EAAD,CACIrG,KAAM2C,GACN2D,oBAAqB/H,GACrBgI,aAAW,EACXC,WAAW,EACXC,SAAU,KACVC,OAAQ,QACRC,QAASjF,GACT,kBAAgB,2BAChB,mBAAiB,iCACjB4F,sBAAsB,EAEtBrG,QAAS,CACLhC,MAAOgC,GAAQhC,OAbvB,UAgBI,cAAC2H,EAAA,EAAD,CAAelC,UAAWzD,GAAQrF,MAAO2H,GAAG,2BAA5C,SAAwE,aAGxE,cAACgE,EAAA,EAAD,CAAexI,MAAOA,GAAtB,SACA,cAAC6H,EAAA,EAAD,CAAelC,UAAWzD,GAAQjG,KAAlC,SACI,cAACwM,GAAA,EAAD,CAAW/L,MAAM,YAAY+K,WAAS,EAACkB,WAAS,EAACtK,OAAO,QAAQmG,GAAG,YAAYoE,KAAK,OAAOC,MAAM,cAAcC,MAAOhF,GAAWiF,SAhTrH,SAACC,GACrBjF,GAAaiF,EAAMC,OAAOH,QA+S0II,WAAY,CAAEzL,MAAO,CAAEf,MAAO,QAASO,SAAU,SAAUF,WAAY,kBAIvO,eAAC+K,EAAA,EAAD,CAAenC,UAAWzD,GAAQjG,KAAlC,UACA,cAAC6J,EAAA,EAAD,CAAQjI,QAASmG,GAAsBtH,MAAM,YAA7C,oBAGA,cAACoJ,EAAA,EAAD,CAAQjI,QA5Sc,WAC1B,IAAI4G,EAAO9D,EACX8D,EAAKE,KAAKb,IAEVE,KACAtD,EAAiBwD,WAAW,SAAS6D,IAAI,YAAYkC,OAAO,CACxDtJ,QAAS8D,IAEbV,GAAa,KAoS+BrH,MAAM,YAA9C,2B,uBC9gBZwN,KAASC,cARY,CACjBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,8CAKX,IAAM/J,GAAmBwJ,KAASQ,YAqBnBC,OAnBf,WACE,MAAwCjM,IAAMC,UAAS,GAAvD,mBAAOrB,EAAP,KAAqBsN,EAArB,KACA,EAAgClM,IAAMC,UAAU,GAAhD,mBAAOJ,EAAP,KAAiBf,EAAjB,KAEMD,EAAsB,SAACuM,GAC3Bc,EAAgBd,IAGlB,OACI,sBAAKnE,UAAU,MAAf,UACE,cAAC,EAAD,CAAYrI,aAAcA,EAAcC,oBAAqBA,EAAqBC,YAAaA,IAC/F,cAAC,EAAD,CAAMD,oBAAqBA,EAAqBgB,SAAUA,EAAUf,YAAaA,IAElE,IAAbe,GAAkB,cAAC,GAAD,CAAOmC,iBAAkBA,SC1BrDmK,IAASC,OACR,cAAC,GAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.388a40b1.chunk.js","sourcesContent":["import React from 'react'\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { CloudCircle } from '@material-ui/icons';\n\nconst root = {\n\tflexGrow: 1,\n\tposition: 'sticky',\n\ttop: 0,\n\tzIndex: 2\n}\n\nconst toolbarExpanded = {\n\theight: 512,\n\talignItems: 'flex-start',\n\tbackground: 'linear-gradient(135deg,#CA4246 16.666%, #E16541 16.666%, #E16541 33.333%, #F18F43 33.333%, #F18F43 50%, #8B9862 50%, #8B9862 66.666%, #476098 66.666%, #476098 83.333%, #A7489B 83.333%)',\n\tcolor: '#fff',\n\ttransition: 'height 1s'\n}\n\nconst toolbar = {\n\theight: 64,\n\talignItems: 'flex-start',\n\tbackground: 'linear-gradient(135deg,#CA4246 16.666%, #E16541 16.666%, #E16541 33.333%, #F18F43 33.333%, #F18F43 50%, #8B9862 50%, #8B9862 66.666%, #476098 66.666%, #476098 83.333%, #A7489B 83.333%)',\n\tcolor: '#fff',\n\ttransition: 'height 1s'\n}\n\n\nconst title = {\n\tflexGrow: 1,\n\talignSelf: 'flex-end',\n\tfontFamily: 'Raleway',\n\tfontWeight: '500',\n\tfontSize: '1.35em',\n\tmarginBottom: '0.8em',\n\tuserSelect: 'none',\n\tcursor: 'pointer'\n}\n\nconst Navigation = ({expandNavbar, expandNavbarHandler, setSelected}) => {\n\tconst expansionHandler = () => {\n\t\texpandNavbarHandler(true);\n\t\tsetSelected(-1);\n\t}\n\n\treturn (\n\t\t<div style={root}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar style={expandNavbar ? toolbarExpanded : toolbar}>\n\t\t\t\t\t<Typography onClick={expansionHandler} style={title} variant=\"h5\" noWrap>\n\t\t\t\t\t\t<CloudCircle /> Personal Cloud\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<IconButton style={{marginTop: '0.3em'}} aria-label=\"display more actions\" edge=\"end\" color=\"inherit\">\n\t\t\t\t\t\t<MoreIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n}\n\nexport default Navigation\n\n\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { IconButton } from '@material-ui/core';\nimport { DescriptionOutlined, LinkOutlined, OutlinedFlag, BookOutlined } from '@material-ui/icons';\n\nconst dashButtons = {\n\tcolor: 'white',\n\tmargin: '0vh 1vw',\n}\n\nconst Dash = ({ expandNavbarHandler, selected, setSelected }) => {\n\tconst handleIndex = (index) => {\n\t\tsetSelected(index);\n\t}\n\n\tconst [dash] = React.useState({\n\t\twidth: '100%',\n\t\tmargin: 'auto',\n\t\tbackgroundColor: '#222',\n\t\tfontFamily: 'Raleway',\n\t\tdisplay: 'block'\n\t});\n\n\tReact.useEffect(() => {\n\t\tif (selected !== -1) {\n\t\t\texpandNavbarHandler(false);\n\t\t} \n\t}, [selected, expandNavbarHandler, dash])\n\n\tconst buttonTextStyle = { fontWeight: '450', fontSize: '20px', color: '#eee' }\n\n\treturn (\n\t\t<div>\n\t\t<Card style={dash} variant=\"outlined\">\n\t\t\t<CardContent>\n\t\t\t\t<IconButton onClick={() => {handleIndex(0)}}><DescriptionOutlined style={dashButtons}/><span style={buttonTextStyle}>{\" Notes\"}</span></IconButton>\n\t\t\t\t<IconButton onClick={() => {handleIndex(1)}}><LinkOutlined style={dashButtons}/><span style={buttonTextStyle}>{\" Links\"}</span></IconButton>\n\t\t\t\t<IconButton onClick={() => {handleIndex(2)}}><OutlinedFlag style={dashButtons}/><span style={buttonTextStyle}>{\" Goals\"}</span></IconButton>\n\t\t\t\t<IconButton onClick={() => {handleIndex(3)}}><BookOutlined style={dashButtons}/><span style={buttonTextStyle}>{\" Diary\"}</span></IconButton>\n\t\t\t\t{/* <IconButton onClick={() => {handleIndex(4)}}><SettingsApplicationsOutlined style={dashButtons}/><span style={buttonTextStyle}>{\" Prefs\"}</span></IconButton> */}\n\t\t\t</CardContent>\n\t\t</Card>\n\t\t</div>\n\t);\n}\n\nexport default Dash;","import { Card, CardContent, createMuiTheme, GridList, GridListTile, ThemeProvider, Checkbox, FormControlLabel, Select, MenuItem } from '@material-ui/core';\nimport { AddCircleOutlineRounded, ArrowDownwardRounded, ArrowRightAlt, ArrowUpwardRounded, DoneAllRounded, StarRounded } from '@material-ui/icons';\nimport React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { useMediaQuery } from 'react-responsive';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core';\nimport Slide from '@material-ui/core/Slide';\nimport './Notes.css';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#232323',\n        color: '#ccc',\n        borderRadius: '20px',\n        fontWeight: '400', \n        fontSize: '1.2em'\n    },\n    paper: {\n        backgroundColor: '#222'\n    },\n    title: {\n        fontWeight: '500',\n        fontSize: '1.3em',\n        color: '#eee'\n    },\n    text: {\n        color: '#ddd'\n    },\n    dropDownstyle: {\n      border: \"1px solid black\",\n      borderRadius: \"5%\",\n      backgroundColor: '#333',\n      color: '#ddd'\n    },\n}));\n\nconst theme = createMuiTheme({\n    overrides: {\n        MuiInputLabel: { \n            root: {\n                color: \"#aaa\"\n            }\n        }\n    }\n  });\n\nconst Notes = ({ projectFirestore }) => {\n    const [folders, setFolders] = React.useState([]);\n    const [openFolder, setOpenFolder] = React.useState(0);\n    const [loading, setLoading] = React.useState(true);\n    const [open, setOpen] = React.useState(false);\n    const [openForm, setOpenForm] = React.useState(false);\n    \n    const [notesData, setNotesData] = React.useState([{\n        folderName: 'loading',\n        notes: [\n            {\n                note: 'loading',\n                date: Date.now(),\n                title: 'loading',\n                important: false,\n                progress: 0\n            }\n        ]\n    }]);\n\n    const isPhone = useMediaQuery({ query: '(max-width: 1224px)' });\n\n    const classes = useStyles();\n\n    const [folderCollapseState, setFolderCollapseState] = React.useState(true);\n    const collapseFolders = () => {\n        setFolderCollapseState(!folderCollapseState);\n    }\n\n    const [currentNote, setCurrentNote] = React.useState({})\n    const handleOpenNote = (note) => {\n        setCurrentNote(note);\n        setOpen(true);\n    }\n    \n    const handleCloseNote = () => {\n        setCurrentNote({});\n        setOpen(false);\n    };\n\n    const handleOpenForm = () => {\n        setOpenForm(true);\n    }\n\n    const handleCloseForm = () => {\n        setOpenForm(false);\n    };\n\n    const containerStyle = {\n        dark: {\n            width: '100%',\n            color: '#eee',\n            backgroundColor: '#222',\n            padding: '3vh 2vw',\n        },\n        mobileDark: {\n            width: '100%',\n            color: '#eee',\n            backgroundColor: '#222',\n            padding: '0',\n            margin: '1vh 0 0 0',\n            fontSize: '1.7vh'\n        }\n    }\n\n    const progressStyle = [\n        { color: 'red' },\n        { color: 'orange' },\n        { color: 'green' }\n    ]\n\n    const gridListStyle = {\n        width: '100%',\n        transform: 'translateZ(0)',\n        fontFamily: 'Quicksand',\n        margin: '1vh 0vw',\n        fontWeight: '600'\n    }\n\n    const handleFolderChange = (index) => { setOpenFolder(index); }\n\n    const folderStyle = {\n        color: 'white',\n        userSelect: 'none',\n        cursor: 'pointer',\n        fontSize: '1em',\n        padding: '1vh 0vw',\n        transition: 'color 0.25s'\n    }\n\n    const parentRowStyle = {\n        mobile: {\n            width: '100%',\n            margin: 'auto'\n        },\n        desktop: {\n            width: '80%',\n            margin: 'auto'\n        }\n    }\n\n    const gridListCardStyle = { backgroundColor: '#292929', height: '12vh', cursor: 'pointer', userSelect: 'none' }\n\n    const [newNote, setNewNote] = React.useState({\n        title: '',\n        note: '',\n        date: undefined,\n        important: false,\n        progress: 0,\n        folder: undefined\n    });\n\n    const handleTitleChange = (event) => {\n        setNewNote(newNote => ({\n            ...newNote,\n            title: event.target.value\n        }));\n    }\n\n    const handleNoteChange = (event) => {\n        setNewNote(newNote => ({\n            ...newNote,\n            note: event.target.value\n        }));\n    }\n\n    const handleImportantChange = (e) => {\n        setNewNote(newNote => ({\n            ...newNote,\n            important: e\n        }));\n    }\n\n    const handleProgressChange = (event) => {\n        setNewNote(newNote => ({\n            ...newNote,\n            progress: event.target.value\n        }));\n    }\n\n    const handleCreateNewNote = () => {\n        let temp = newNote;\n        temp = {\n            ...temp, \n            folder: folders[openFolder],\n            date: Date.now()\n        }\n        let xtemp = notesData;\n        xtemp.push(temp);\n\n        projectFirestore.collection('notes').add(temp);\n        handleCloseForm();\n\n        setNewNote({\n            title: '',\n            note: '',\n            date: undefined,\n            important: false,\n            progress: 0,\n            folder: undefined\n        });\n    }\n\n    const handleNoteDelete = (note) => {\n        projectFirestore.collection(\"notes\").doc(note.id).delete().then(() => {\n            let newNoteData = notesData.filter(xnote => {\n                return note.id !== xnote.id\n            });\n            setNotesData(newNoteData);\n        }).catch((error) => {\n            console.error(\"Error removing document: \", error);\n        });\n        handleCloseNote();\n    }\n\n    const [createFolderDialog, setCreateFolderDialog] = React.useState(false);\n    const [newFolder, setNewFolder] = React.useState('');\n\n    const handleNewFolder = (event) => {\n        setNewFolder(event.target.value);\n    }\n\n    const handleCloseNewFolder = () => {\n        setCreateFolderDialog(false);\n    }\n\n    const handleOpenNewFolder = () => {\n        setCreateFolderDialog(true);\n    }\n\n    const handleCreateNewFolder = () => {\n        let temp = folders;\n        temp.push(newFolder);\n        \n        handleCloseNewFolder();\n        projectFirestore.collection('notes').doc('metadata').update({\n            folders: temp\n        })\n        setNewFolder('');\n    }\n\n    React.useEffect(() => {\n        let fetchAll = [];\n        loading && projectFirestore.collection('notes').get().then((snapshot) => {\n            snapshot.docs.forEach((note) => {\n                if (note.id !== 'metadata') {\n                    let temp = note.data();\n                    temp['id'] = note.id;\n                    fetchAll.push(temp);\n                } else {\n                    setFolders(note.data().folders);\n                }\n            });\n        }).then(() => {\n            setNotesData(fetchAll);\n        }).then(() => {\n            !isPhone && setFolderCollapseState(false)\n            setLoading(false);\n            // console.count('fetched');\n        })\n    }, [isPhone, projectFirestore, loading])\n\n    return (\n        !loading && <div><Row style={isPhone ? parentRowStyle.mobile : parentRowStyle.desktop}>\n            <Col xs={12} sm={12} md={3} lg={3} xl={3}>\n                <Container fluid style={{...containerStyle.dark, width: '100%'}}>\n                    <Row>\n                        <Col xs={10} sm={10} md={10} lg={10} xl={10}>\n                            <h4 style={folderCollapseState ? {marginBottom: '1vh'} : {marginBottom: '4vh'}}> Folders </h4>\n                        </Col>\n                        <Col xs={1} sm={1} md={1} lg={1} xl={1} style={{\n                            marginTop: '0.25em',\n                            userSelect: 'none',\n                            cursor: 'pointer'\n                        }}>\n                            {!folderCollapseState && <AddCircleOutlineRounded onClick={handleOpenNewFolder} />}\n                            {isPhone && !folderCollapseState && <ArrowUpwardRounded onClick={() => {collapseFolders()}} />}\n                            {isPhone && folderCollapseState && <ArrowDownwardRounded onClick={() => {collapseFolders()}} />}\n                        </Col>\n                    </Row>\n                    {\n                        folders.map((folder, index) => {\n                            return (\n                                <Row key={index} onClick={() => {handleFolderChange(index)}} style={folderCollapseState ? {display: 'none'} : {}}>\n                                    <Col xs={10} sm={10} md={10} lg={10} xl={10}>\n                                    <div style={\n                                        index === openFolder ? {\n                                            ...folderStyle, color: '#CA4246'\n                                        } : folderStyle\n                                    }>{folder}</div>\n                                    </Col>\n                                    <Col xs={1} sm={1} md={1} lg={1} xl={1}>\n                                        <ArrowRightAlt style={\n                                            index === openFolder ? {\n                                                color: '#CA4246',\n                                                marginTop: '0.4em',\n                                                userSelect: 'none',\n                                                cursor: 'pointer'\n                                            } : {\n                                                color: 'white',\n                                                marginTop: '0.4em',\n                                                userSelect: 'none',\n                                                cursor: 'pointer'     \n                                            }\n                                        }/>\n                                    </Col>\n                                </Row>\n                            )\n                        })\n                    }\n                </Container>\n            </Col>\n            {/* notes screen for PC */}\n            { !isPhone && <Col xs={12} sm={12} md={9} lg={9} xl={9} className='notes-mdplus'>\n                <div style={{\n                    flexWrap: 'wrap',\n                    justifyContent: 'space-around',\n                    fontFamily: 'Quicksand'\n                }}>\n                    <Container fluid style={containerStyle.dark}>\n                        <Row>\n                            <Col><h4>Saved Notes in <span style={{color: '#CA4246'}}>{folders[openFolder]}</span></h4></Col>\n                            <Col><Button style={{\n                                color: 'white', backgroundColor: '#333', float: 'right'\n                            }} onClick={handleOpenForm}>Add Note</Button></Col>\n                        </Row>\n                        <Scrollbars autoHide autoHideTimeout={1000} style={{height: '73vh'}}renderThumbVertical={({ style, ...props }) =>\n                            <div {...props} style={{ ...style, backgroundColor: '#CA4246', width: '4px', opacity: '0.5'}}/>\n                        }>\n                        <GridList cellHeight={120} spacing={4} style={gridListStyle}>\n                            {\n                                notesData.map((note, index) => (\n                                    note.folder === folders[openFolder] && <GridListTile key={index} cols={2} rows={1} >\n                                        <Card onClick={() => {handleOpenNote(note)}} style={note.important ? {...gridListCardStyle, borderTop: '1px solid gold'} : gridListCardStyle}>\n                                            <CardContent>\n                                                <Row>\n                                                    <Col sm={12} xs={12} md={12} lg={12} xl={12}>\n                                                        <span style={{color: '#eee', fontWeight: '500', fontSize: '1.2em'}}>{note.title}</span><br />\n                                                    </Col>\n                                                    <Col sm={12} xs={12} md={12} lg={12} xl={12}>\n                                                        { note.important && <StarRounded style={{color: 'gold'}}/> }\n                                                        { <DoneAllRounded style={ progressStyle[note.progress] }/> }\n                                                    </Col>\n                                                </Row>\n                                                <span style={{color: '#aaa', fontWeight: '100', fontSize: '1em'}}>{new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(note.date)}</span>\n                                                {/* <br /><br /><br />\n                                                <div style={{color: '#bbb', fontWeight: '500', fontSize: '1.1em', textAlign: 'justify'}}>{note.note}</div> */}\n                                            </CardContent>\n                                        </Card>\n                                    </GridListTile>\n                                ))\n                            }\n                        </GridList>\n                        </Scrollbars>\n                    </Container>\n                </div>\n            </Col>}\n\n            {/* =================================================================================================== */}\n            {/* notes screen for Mobile */}\n\n            { isPhone && <Col xs={12} sm={12} md={9} lg={9} xl={9} className='notes-mdplus'>\n                <div style={{\n                    flexWrap: 'wrap',\n                    justifyContent: 'space-around',\n                }}>\n                    <Container fluid style={containerStyle.mobileDark}>\n                        <Row>\n                            <Col sm={8} xs={8} md={8} lg={8} xl={8}><h4>Saved Notes in <span style={{color: '#CA4246'}}>{folders[openFolder]}</span></h4></Col>\n                            <Col sm={4} xs={4} md={4} lg={4} xl={4}><Button style={{\n                                color: 'white', backgroundColor: '#333', float: 'right'\n                            }} onClick={handleOpenForm}>Add Note</Button></Col>\n                        </Row>\n                        <Scrollbars autoHide autoHideTimeout={1000} style={{height: '82vh'}}renderThumbVertical={({ style, ...props }) =>\n                            <div {...props} style={{ ...style, backgroundColor: '#CA4246', width: '4px', opacity: '0.5'}}/>\n                        }>\n                        <GridList cellHeight={100} spacing={4} style={gridListStyle}>\n                            {\n                                notesData.map((note, index) => (\n                                    note.folder === folders[openFolder] && <GridListTile key={index} cols={2} rows={1} >\n                                        <Card onClick={() => {handleOpenNote(note)}} style={note.important ? {...gridListCardStyle, borderTop: '1px solid gold', height: '12vh'} : gridListCardStyle}>\n                                            <CardContent>\n                                                <Row>\n                                                    <Col sm={10} xs={10} md={11} lg={11} xl={11}>\n                                                        <span style={{color: '#eee', fontWeight: '500', fontSize: '1.2em'}}>{note.title}</span><br />\n                                                    </Col>\n                                                    <Col sm={1} xs={1} md={1} lg={1} xl={1}>\n                                                        { note.important ? <StarRounded style={{color: 'yellow'}}/> : ``}\n                                                        { <DoneAllRounded style={ {...progressStyle[note.progress], float: 'none'} }/> }\n                                                    </Col>\n                                                </Row>\n                                                <span style={{color: '#aaa', fontWeight: '400', fontSize: '1em'}}>{new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(note.date)}</span>\n                                                {/* <br /><br /><br />\n                                                <div style={{color: '#bbb', fontWeight: '500', fontSize: '1.1em', textAlign: 'justify'}}>{note.note}</div> */}\n                                            </CardContent>\n                                        </Card>\n                                    </GridListTile>\n                                ))\n                            }\n                        </GridList>\n                        </Scrollbars>\n                    </Container>\n                </div>\n            </Col>}\n        </Row>\n        {/* show note */}\n        <Dialog\n            open={open}\n            TransitionComponent={Transition}\n            keepMounted\n            fullWidth={true}\n            maxWidth={'md'}\n            scroll={'paper'}\n            onClose={handleCloseNote}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n\n            classes={{\n                paper: classes.paper\n            }}\n        >\n            <DialogContent className={classes.title} id=\"alert-dialog-slide-title\">{currentNote.title}</DialogContent>\n            <DialogContent className={classes.root}><span style={{color: '#aaa', fontWeight: '400', fontSize: '1em'}}>{new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(currentNote.date)}</span></DialogContent>\n            <DialogContent className={classes.root}>{currentNote.note}</DialogContent>\n            <DialogActions className={classes.root}>\n            <Button color=\"secondary\" style={ currentNote.important ? { color: 'gold' } : {  } }>\n                Important\n            </Button>\n            <Button onClick={() => {handleNoteDelete(currentNote)}} color=\"secondary\">\n                Delete\n            </Button>\n            <Button onClick={handleCloseNote} color=\"secondary\">\n                Close\n            </Button>\n            </DialogActions>\n        </Dialog>\n        {/* open new note form */}\n        <Dialog\n            open={openForm}\n            TransitionComponent={Transition}\n            keepMounted\n            fullWidth={true}\n            maxWidth={'md'}\n            scroll={'paper'}\n            onClose={handleCloseForm}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n            disableBackdropClick={true}\n\n            classes={{\n                paper: classes.paper\n            }}\n        >\n            <DialogContent className={classes.title} id=\"alert-dialog-slide-title\">{'New Note'}</DialogContent>\n            {/* <DialogContent className={classes.root}><TextF</DialogContent> */}\n            \n            <ThemeProvider theme={theme}>\n            <DialogContent className={classes.root}>\n                <TextField color='secondary' autoComplete='off' fullWidth autoFocus margin='dense' id='title' type='text' label='Title' value={newNote.title} onChange={handleTitleChange} InputProps={{ style: { color: 'white', fontSize: '0.85em', fontFamily: 'inherit' }, form: {autocomplete: 'off'} }}></TextField>\n                <TextField color='secondary' fullWidth multiline={true} margin='dense' id='title' type='text' label='Note' value={newNote.note} onChange={handleNoteChange} InputProps={{ style: { color: 'white', fontSize: '0.85em', fontFamily: 'inherit' } }}></TextField>\n                \n                <Row>\n                    <Col>\n                    <Select style={{ marginTop: '1.7vh', color: '#ccc' }}\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={newNote.progress}\n                        onChange={handleProgressChange}\n                        color='secondary'\n                        MenuProps={{\n                            classes: {\n                                paper: classes.dropDownstyle\n                            }\n                        }}\n                        >\n                        <MenuItem value={0}>Incomplete</MenuItem>\n                        <MenuItem value={1}>Ongoing</MenuItem>\n                        <MenuItem value={2}>Complete</MenuItem>\n                    </Select>\n                    </Col>\n                    <Col>\n                        <FormControlLabel style={{ marginTop: '1.7vh', userSelect: 'none' }}\n                            control={<Checkbox checked={newNote.important} onChange={() => {handleImportantChange(!newNote.important)}} name=\"importantMark\" />}\n                            label=\"Important\"\n                        /> \n                    </Col>\n                </Row>\n \n            </DialogContent>\n            </ThemeProvider>\n            \n            <DialogActions className={classes.root}>\n            <Button onClick={handleCloseForm} color=\"secondary\">\n                Cancel\n            </Button>\n            <Button onClick={handleCreateNewNote} color=\"secondary\">\n                Add\n            </Button>\n            </DialogActions>\n        </Dialog>\n        {/* Create a new folder */}\n        <Dialog\n            open={createFolderDialog}\n            TransitionComponent={Transition}\n            keepMounted\n            fullWidth={true}\n            maxWidth={'sm'}\n            scroll={'paper'}\n            onClose={handleCloseForm}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n            disableBackdropClick={true}\n\n            classes={{\n                paper: classes.paper\n            }}\n        >\n            <DialogContent className={classes.title} id=\"alert-dialog-slide-title\">{'New Note'}</DialogContent>\n            {/* <DialogContent className={classes.root}><TextF</DialogContent> */}\n            \n            <ThemeProvider theme={theme}>\n            <DialogContent className={classes.root}>\n                <TextField color='secondary' fullWidth autoFocus margin='dense' id='newfolder' type='text' label='Folder Name' value={newFolder} onChange={handleNewFolder} InputProps={{ style: { color: 'white', fontSize: '0.85em', fontFamily: 'inherit' } }}></TextField>\n            </DialogContent>\n            </ThemeProvider>\n            \n            <DialogActions className={classes.root}>\n            <Button onClick={handleCloseNewFolder} color=\"secondary\">\n                Cancel\n            </Button>\n            <Button onClick={handleCreateNewFolder} color=\"secondary\">\n                Add\n            </Button>\n            </DialogActions>\n        </Dialog>\n        </div>\n    )\n}\n\nexport default Notes\n","import './App.css';\n\nimport Navigation from './components/navbar/Navigation';\nimport Dash from './components/home/Dash';\nimport React from 'react';\n\nimport Notes from './components/notes/Notes';\n\nimport firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/firestore';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDFXfVcolC_Z2YASVdDRv3njskcn1j-C4g\",\n    authDomain: \"mycloud-database.firebaseapp.com\",\n    projectId: \"mycloud-database\",\n    storageBucket: \"mycloud-database.appspot.com\",\n    messagingSenderId: \"826969352458\",\n    appId: \"1:826969352458:web:22cf3496afbc2e830b72f3\"\n};\nfirebase.initializeApp(firebaseConfig);\n\n// const projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\n\nfunction App() {\n  const [expandNavbar, setExpandNavbar] = React.useState(true);\n  const [selected, setSelected] = React.useState(-1)\n\n  const expandNavbarHandler = (e) => {\n    setExpandNavbar(e);\n  }\n\n  return (\n      <div className=\"App\">\n        <Navigation expandNavbar={expandNavbar} expandNavbarHandler={expandNavbarHandler} setSelected={setSelected}/>\n        <Dash expandNavbarHandler={expandNavbarHandler} selected={selected} setSelected={setSelected} />\n        {\n          selected === 0 && <Notes projectFirestore={projectFirestore}/>\n        }\n      </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n// import { createStore } from \"redux\";\n// import rootReducer from \"./store/reducers/rootReducer\";\n\n// import { Provider } from \"react-redux\";\n\n// const store = createStore(rootReducer);\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}